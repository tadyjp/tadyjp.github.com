<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Oh! my tady]]></title>
  <link href="http://blog.tady.jp/atom.xml" rel="self"/>
  <link href="http://blog.tady.jp/"/>
  <updated>2013-08-14T01:21:18+09:00</updated>
  <id>http://blog.tady.jp/</id>
  <author>
    <name><![CDATA[tady]]></name>
    <email><![CDATA[a.dat.jp@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ssh-agentを使って公開鍵認証無しにcapistranoでgithubからdeployする]]></title>
    <link href="http://blog.tady.jp/posts/2013/06/29/capistrano-plus-github-plus-ssh-agent"/>
    <updated>2013-06-29T18:00:00+09:00</updated>
    <id>http://blog.tady.jp/posts/2013/06/29/capistrano-plus-github-plus-ssh-agent</id>
    <content type="html"><![CDATA[<h1>この記事の対象</h1>

<ul>
<li>railsプロジェクトをcapistranoでdeployしている人</li>
<li>deploy対象のコードがgithubのprivateレポジトリで運用されている人</li>
<li>chef-soloを使ってサーバ運用している人</li>
</ul>


<h1>chef-soloの導入</h1>

<p>最近社内に導入された <code>chef-solo</code> によってappサーバの冗長化が簡単になりました。
サーバ毎に異なる設定も <code>role</code> や <code>attributes</code> などの仕組みを使うことで簡単に扱うことが出来ます。
しかし、ひとつぶち当たった壁が、 <strong>sshの鍵をどうしようか</strong>という点でした。</p>

<h1>githubからの直接deploy</h1>

<p>あるサービスでは、アプリケーションコードをgithubのprivateレポジトリで運用しています。
githubは自身の公開鍵をweb上から登録することでパスフレーズなしにgitへのアクセスができます。</p>

<p>ここで起こった問題が、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>githubの鍵をすべてのサーバで作るのめんどくせ o ○(´・ω・`)</span></code></pre></td></tr></table></div></figure>


<h1>ssh agent forwardingというトリック</h1>

<p><a href="https://help.github.com/articles/using-ssh-agent-forwarding">https://help.github.com/articles/using-ssh-agent-forwarding</a></p>

<p>よく調べてみると、githubのドキュメントに<code>ssh agent forwarding</code>という項目がありました。
こんなめんどくさいことがcapistranoやgithubで対応されていないはずがありません。</p>

<p>なにやら、この<code>ssh agent forwarding</code>を使うと、ローカル(手元の開発機)の秘密鍵をリモート(本番機)でも使えるようになるらしいです。</p>

<h1>設定</h1>

<h2>1. [ローカル] ssh configの設定</h2>

<p>ローカルの<code>~/.ssh/config</code>で本番機へのssh設定に<code>ForwardAgent</code>設定を加えます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ~/.ssh/config
</span><span class='line'>
</span><span class='line'>Host server.example.com
</span><span class='line'>  ...
</span><span class='line'>  ForwardAgent yes</span></code></pre></td></tr></table></div></figure>


<h2>2. [ローカル] ssh-agent機能を設定</h2>

<p><code>ssh agent</code>が動くために<code>ssh-add</code>を実行します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-add ~/.ssh/id_rsa</span></code></pre></td></tr></table></div></figure>


<p><code>ssh-add -L</code>を実行して鍵が表示されれば成功です</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$&gt; ssh-add -L
</span><span class='line'>ssh-rsa AFEVB3Nd4C1......</span></code></pre></td></tr></table></div></figure>


<h2>3. [リモート] ssh-agent機能を確認</h2>

<p>この状態でリモートに対してsshをつなぐと、その接続で<code>ssh agent forwarding</code>が動いています。</p>

<p>確認してみましょう。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh server.example.com
</span><span class='line'>
</span><span class='line'>~~~~
</span><span class='line'>ssh -T git@github.com
</span><span class='line'>Hi &lt;githubのユーザー名&gt;! You've successfully authenticated, but GitHub does not provide shell access.</span></code></pre></td></tr></table></div></figure>


<p>なんということでしょう！秘密鍵が無いはずのリモートでgithubへのsshが通っています！</p>

<p>これでリモートでgithubからコードを落とすことが出来ます。</p>

<h2>4. capistranoで<code>ssh agent</code>を使う</h2>

<p>ここまで来ると後はcapistrano(内部的にsshを利用している)でも<code>ssh agent</code>を有効にするだけです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># config/deploy.rb
</span><span class='line'>
</span><span class='line'>set :ssh_options, :forward_agent =&gt; true
</span><span class='line'>set :repository, "git@github.com:xxxxxxxxxx.git"
</span><span class='line'>set :deploy_via, :remote_cache
</span><span class='line'>set :git_shallow_clone, 1</span></code></pre></td></tr></table></div></figure>


<p>これで<code>cap deploy</code>でgithubからdeployできます。</p>

<p>以上です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第8回titaniumもくもく会に参加してきたよ]]></title>
    <link href="http://blog.tady.jp/posts/2013/05/16/titanium"/>
    <updated>2013-05-16T19:41:00+09:00</updated>
    <id>http://blog.tady.jp/posts/2013/05/16/titanium</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://blog.tady.jp/images/photos/2013-05-16-titanium.jpg" width="300"></p>

<h1>勉強会に参加しよう</h1>

<p>参加だけではなく、LT(ライトニング・トーク)する側になれるようになるのが当面の目標。
そのためには、日々技術のストックが必要。
幸い、うちの会社は社員が新技術を習得するのを推奨しているので、あとは自分のモチベーション次第でいろいろ出来る。</p>

<h1>ATND</h1>

<p>ATNDの新着イベントはRSSを登録しています。</p>

<h1>リクルート</h1>

<p>オフィスきれい。この東京駅を見下ろしながら23Fまで上る感覚が何とも言えない光悦感。
うちの会社も何年したらこういった身分になれるんだろう。</p>

<h1>Tizen</h1>

<p>最初はアーキテクチャーの話。正直あまり興味は無かった。</p>

<p>その後にWeb Applicationの話。
&ldquo;Web Runtime&#8221;とか、windowsメトロアプリを彷彿とさせる。
jQueryMobile baseのUIが使えるのか。</p>

<p>Tizenとwebkitとchromeエンジンと
blink</p>

<p>Tizen Associationの企業の力関係</p>

<p>Androidではデバイス毎の仕様がばらばらで開発者が大変だが、Tizenはどうか？</p>

<h1>Titanium</h1>

<p>北海道のいぐちさん</p>

<h1>Twilio</h1>

<p>VoIPのAPI</p>

<h2>できること</h2>

<ul>
<li>「○○の方は1を&hellip;」</li>
<li>コールセンターでキューにいれる</li>
<li>カンファレンスコール（複数人）</li>
</ul>


<p>サービス提供会社が代金を支払う</p>

<ul>
<li>アプリ同士</li>
<li>ブラウザとアプリ</li>
<li>アプリと固定電話</li>
<li>etc&hellip;</li>
</ul>


<h2>気になるお値段</h2>

<ul>
<li>電話番号は490円</li>
<li>050で始まる</li>
<li>固定電話へは9円/分</li>
</ul>


<p>バックエンドはAWS, オートスケール</p>

<p>オバマ大統領の選挙</p>

<p>日本ではKDDI</p>

<p>ちなみに、TitaniumのバックエンドもKDDI</p>

<h2>モジュールを作ってみました。</h2>

<p><strong><em>TiTwilio</em></strong></p>

<ul>
<li>自動応答</li>
<li>発信</li>
<li>ログイン</li>
</ul>


<p>サーバはsinatra
Only wifi or LAN?</p>

<p>自分の電話番号を知られずに相手に電話
コミュニティ
Helpサービス</p>

<p>githubに公開する予定</p>

<p>KDDIで作ったアカウントでないと050にならない</p>

<h2>ネタ</h2>

<ul>
<li>Uber, Taxi配車</li>
<li>サーバ障害で電話する</li>
<li>目覚まし電話</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OctopressとGithubでブログを構築したよ]]></title>
    <link href="http://blog.tady.jp/posts/2013/05/15/first-post-of-octopress"/>
    <updated>2013-05-15T00:34:00+09:00</updated>
    <id>http://blog.tady.jp/posts/2013/05/15/first-post-of-octopress</id>
    <content type="html"><![CDATA[<h1>テスト投稿</h1>

<p>本文はmarkdownで書いています</p>

<h1>詳しい導入方法は</h1>

<p>まだ後日書きます</p>

<h1>やったこと</h1>

<ul>
<li>Google Analyticsの導入</li>
<li>Google Web Master Toolの導入</li>
</ul>


<h1>この後やること</h1>

<ul>
<li>旧ブログからの移行</li>
<li>テーマ変更</li>
<li><a href="http://jashkenas.github.io/docco/">docco</a>デザインの導入</li>
<li>sitemap_generator.rbを修正、googleに送信するように</li>
</ul>

]]></content>
  </entry>
  
</feed>
